<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qiaohx.qblog.service.user.dao.UserLoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.qiaohx.qblog.service.user.model.UserLoginLog" >
    <id column="LOGIN_LOG_ID" property="loginLogId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="CERT_TYPE" property="certType" jdbcType="CHAR" />
    <result column="LOGIN_CERT" property="loginCert" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="FLAG" property="flag" jdbcType="CHAR" />
    <result column="LOGIN_DATE" property="loginDate" jdbcType="TIMESTAMP" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    LOGIN_LOG_ID, USER_ID, CERT_TYPE, LOGIN_CERT, PASSWORD, FLAG, LOGIN_DATE, IP
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_login_log
    where LOGIN_LOG_ID = #{loginLogId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_login_log
    where LOGIN_LOG_ID = #{loginLogId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qiaohx.qblog.service.user.model.UserLoginLog" >
    insert into user_login_log (LOGIN_LOG_ID, USER_ID, CERT_TYPE, 
      LOGIN_CERT, PASSWORD, FLAG, 
      LOGIN_DATE, IP)
    values (#{loginLogId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{certType,jdbcType=CHAR}, 
      #{loginCert,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{flag,jdbcType=CHAR}, 
      #{loginDate,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qiaohx.qblog.service.user.model.UserLoginLog" >
    insert into user_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginLogId != null" >
        LOGIN_LOG_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="certType != null" >
        CERT_TYPE,
      </if>
      <if test="loginCert != null" >
        LOGIN_CERT,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="flag != null" >
        FLAG,
      </if>
      <if test="loginDate != null" >
        LOGIN_DATE,
      </if>
      <if test="ip != null" >
        IP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginLogId != null" >
        #{loginLogId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="certType != null" >
        #{certType,jdbcType=CHAR},
      </if>
      <if test="loginCert != null" >
        #{loginCert,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=CHAR},
      </if>
      <if test="loginDate != null" >
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qiaohx.qblog.service.user.model.UserLoginLog" >
    update user_login_log
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="certType != null" >
        CERT_TYPE = #{certType,jdbcType=CHAR},
      </if>
      <if test="loginCert != null" >
        LOGIN_CERT = #{loginCert,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        FLAG = #{flag,jdbcType=CHAR},
      </if>
      <if test="loginDate != null" >
        LOGIN_DATE = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        IP = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where LOGIN_LOG_ID = #{loginLogId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qiaohx.qblog.service.user.model.UserLoginLog" >
    update user_login_log
    set USER_ID = #{userId,jdbcType=VARCHAR},
      CERT_TYPE = #{certType,jdbcType=CHAR},
      LOGIN_CERT = #{loginCert,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      FLAG = #{flag,jdbcType=CHAR},
      LOGIN_DATE = #{loginDate,jdbcType=TIMESTAMP},
      IP = #{ip,jdbcType=VARCHAR}
    where LOGIN_LOG_ID = #{loginLogId,jdbcType=VARCHAR}
  </update>
</mapper>